[package]
name = "voicevox_core"
version.workspace = true
edition.workspace = true
publish.workspace = true

[features]
default = []
directml = ["ort/directml"]

[dependencies]
anyhow.workspace = true
# async_zip = { workspace = true, features = ["full"] }
cfg-if.workspace = true
derive-getters.workspace = true
derive-new.workspace = true
derive_more.workspace = true
duplicate.workspace = true
easy-ext.workspace = true
educe.workspace = true
enum-map.workspace = true
fs-err = { workspace = true }
futures.workspace = true
indexmap = { workspace = true, features = ["serde"] }
itertools.workspace = true
nanoid.workspace = true
ndarray.workspace = true
once_cell.workspace = true
open_jtalk.workspace = true
regex.workspace = true
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true, features = ["preserve_order"] }
tempfile.workspace = true
thiserror.workspace = true
tokio = { workspace = true, features = ["sync", "macros", "rt"] }
tracing.workspace = true
uuid = { workspace = true, features = ["v4", "serde"] }
voicevox_core_macros = { path = "../voicevox_core_macros" }
zip = { version = "0.6.6", default-features = false, features = [
  "deflate-zlib",
] }

[dependencies.ort]
version = "1.16.3"
default-features = false
features = ["half", "copy-dylibs"]

[dev-dependencies]
heck.workspace = true
pretty_assertions.workspace = true
rstest.workspace = true
#test_util.workspace = true

[target."cfg(windows)".dependencies]
humansize = "2.1.2"
windows = { version = "0.43.0", features = [
  "Win32_Foundation",
  "Win32_Graphics_Dxgi",
] }

[lints.rust]
unsafe_code = "deny"      # FIXME: あまり意味が無くなっているため潔く`allow`にする。あるいはunsafeを撲滅する
rust_2018_idioms = "warn"
